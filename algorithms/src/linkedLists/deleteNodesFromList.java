package linkedLists;

import java.util.LinkedList;
import java.util.Scanner;

public class deleteNodesFromList {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        LinkedList<Integer> list = new LinkedList<>();
        LinkedList<Integer> markers = new LinkedList<>();
        int n = sc.nextInt();

        //        if (list.get(1) != null) list.remove(1); Не работи со null да споредуваш integers

        for (int i = 0; i < n; i++) {
            list.add(sc.nextInt());
            markers.add(1); // направи ги сите единици
        }

        int counter = 3;
        int index = 1;

        for (int i = 0; i < n; i++) {
            if (i == index) { // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
                markers.set(i, 0); // маркирање нули на позиции елементи кои треба да се избришат
                index += counter; // 4, 8, 13, 19 <-- индекси за бришење
                counter++; // 4, 5, 6, 7 <-- скокот се зголемува
            }
        }

        System.out.print(list.getFirst());

        for (int i = 1; i < n; i++) {
            if (markers.get(i) == 0) continue;
            System.out.print("->" + list.get(i));
        }

        // Бројчињава, counter и index, личат смешно на почеток кога ќе ги прочиташ и ќе се запрашаш зошто ги задавам?
        // Индексите за бришење треба да ми се
        // 1 4 8 13 19 26 ...
        
        // Со remove функцијата јас истовремено ја менувам големината на листата
        // и индексите на секој од елементите се менуваа но откако ми излегоа
        // 3 "IndexOutOfBoundsException" исклучоци при тестирање
        // набрзо сфатив дека не е толку идеален светот во кој жиевееме.
        // Методот каде што треба да бришам елементи би бил премногу непредвидлив.
        // ~ а никој не рече дека морам вистински да ги бришам ;)
        // 0  1 2  3 4 5  6  7  8   9  10 11 12 13 14  15 16 17 18 19 20 21   <--  индекси
        // 1  3 4  6 7 8  10 11 12 13  15 16 17 18 19  21 22 23 24 25 26 27   <--  хипотетички елементи на низа
        //  2    5      9            14              20                  xх   <--  избришани елементи
        //                                                                   
        //                                                        (хx значи дека тој елемент треба да се брише)
        //
        // Наместо да ги бришам елементите (и да ми се менуваат индексите и се да е покомплицирано од колку што треба да биде)
        // Направив втора листа, каде што сите елементи на сите позиции се единици. Ги пресметувам кои индекси ми се за бришење,
        // и на нивните позиции во markers листата ставам нули
        // При печатење секогаш кога ќе наидам на нула во маркери, го скокам цел код надоле и одам веднаш на следната итерација
        
    }

}
