package stacks;

import java.util.Scanner;
import java.util.Stack;

public class orderByColorGame {

    public static void main (String[] args) {

        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        Stack<Character> first = new Stack<Character>();
        Stack<Character> bomb = new Stack<Character>();

        for (int i = 0; i < n; i++) {
            char c = sc.next().charAt(0);
            if (c != 'R') bomb.clear(); // ако не е црвено топче, експлодирај ги
            first.push(c); // ставај се
            while (!first.isEmpty() && first.peek() == 'R') // извршувај се додека горе има црвени
                bomb.push(first.pop()); // откако ќе собере 3 црвени, узурпација прави ако сретне уште некое
            if (bomb.size() < 3) // ако не собере 3 црвени, ги враќа назад, нема бомба :(
                while (!bomb.isEmpty()) first.push(bomb.pop());
        }

        System.out.println(first);

        Stack<Character> second = new Stack<>();
        Stack<Character> third = new Stack<>();

        while (!first.isEmpty()) {
            if (first.peek() == 'R') third.push(first.pop()); // ако си црвено од старт одиш во третата
            else {
                if (first.peek() == 'B' && second.isEmpty()) second.push(first.pop());
                else {
                    while (!first.isEmpty() && first.peek() == 'G') third.push(first.pop()); // сите зелени стави ги во трета
                    while (!second.isEmpty() && second.peek() == 'G') third.push(second.pop()); // сите зелени од втора стави ги во трета
                    while (!first.isEmpty() && first.peek() == 'B') second.push(first.pop()); // сите сини стави ги во втора
                    while (!third.isEmpty() && third.peek() == 'G') second.push(third.pop()); // врати ги сега сите зелени од трета во втора
                }
            }
        }
        // сме ги ставиле сите црвени во третата, време е зелените да ги ставиме

        System.out.println(second);

        while (!second.isEmpty() && second.peek() == 'G') // сите зелени од втора стави ги во трета
            third.push(second.pop());


        while (!second.isEmpty() && second.peek() == 'B') // сите сини од втора стави ги во трета
            third.push(second.pop());

        System.out.println(third);
    }

    // Задачава беше ментална но ја решив. Прво се кочев 50 години со бомбата, текстот беше пречуден
    // но некако разбрав дека бомба се формира кога ќе дојдат 3 црвени на влез, и ако има 5 црвени последователни
    // (3 од влез и 2 веќе во кутија) тогаш сите 5 експлодираат. // ова е пример
    // За да го направам ова, морав динамично да проверувам дали имам 3 црвени последователни.
    // Имам посебен стек наречен bomb кој што ги собира црвените, (со собирањето во bomb следам дали има последователни 3)
    // Ако имам помалку од 3, ги враќам црвените :( значи дека немам собрано доволно

    // Во if условот на 18 линија, ако наидам на топче кое што не е црвено,
    // тогаш го експлодирам бомба стекот.
    // Бомба стекот или ќе има 3 или повеќе црвени топчиња последователни што ги собрало
    // или ништо нема да има, бидејќи ако имаме помалку од 3 собрано, ги враќаме назад :D


    // Потоа, прво нешто е да ја испразнам првата кутија со тоа што црвените топчиња ги ставам веднаш во третата
    // Ако имам сино топче и втората кутија е празна го ставам. Проблем е да ставам зелено врз сино !!
    // Ако пак го немам тоа, ги земам сите зелени што се во првата и во втората кутија и ги ставам во третата
    // Од првата кутија ако имам сини ги ставам во втората, потоа ги враќам зелените од третата во втората кутија
    // Rinse and repeat

    // На крај, чим ми се испразнила првата кутија значи дека успешно сум ги ставила црвените во третата кутија
    // Со помош на четирите while-ови што вртат, во втората кутија наместени ми се прво да ми се сини па потоа зелени
    // Само треба зелените да ги префрлам во третата кутија, па потоа и сините

    // техно сетот што го слушав дур го пишував кодот:
    // https://youtu.be/pZhUS_q4jkc



}
